# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

workflow:
  rules:
    # Run only for branches, not tags:
    # https://stackoverflow.com/a/68130421/624787
    - if: "$CI_COMMIT_TAG"
      when: "never"
    - when: "always"

default:
  image: "docker:latest"
  services:
    - "docker:dind"

variables:
  # Options that affect GitLab CI/CD runner behavior
  GIT_FETCH_EXTRA_FLAGS: "--tags --prune"

  # Secrets from the GitLab CI/CD Variables UI:
  CODECOV_TOKEN: "$CODECOV_TOKEN"
  DOCKER_PASS: "$DOCKER_PASS"
  GPG_PASSPHRASE: "$GPG_PASSPHRASE"
  GPG_SIGNING_PRIVATE_KEY: "$GPG_SIGNING_PRIVATE_KEY"
  PYPI_PASSWORD: "$PYPI_PASSWORD"
  TEST_PYPI_PASSWORD: "$TEST_PYPI_PASSWORD"
  GH_TOKEN: "$GH_TOKEN"

  # Change pip's cache directory to be inside the project directory since we can only
  # cache local items:
  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # Variables controlling behavior
  PUID: "1001"
  PGID: "1001"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  # Increment to clear the cache
  key: "v2"
  paths:
    - "./.cache/pip"
    - "./.tox"
    - "./var/docker/py*/.tox"

# Delegate to the `./Makefile` as much as possible to keep as much portable between CI
# platforms

stages:
  - "bump"
  - "build-test"
  - "release"

bump:
  stage: "bump"
  script:
    # Hand off the rest to `$ make` as the unprivileged user
    - "./bin/docker-entrypoint make -e PYTHON_MINORS=3.11 build-bump build-wheel"
  artifacts:
    # Upload build artifacts:
    # https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html
    paths:
      - "./NEWS-release.rst"
      - "./dist/*"

build-test:
  stage: "build-test"
  needs: ["bump"]
  parallel:
    matrix:
      - PYTHON_MINORS:
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
  script:
    - "./bin/docker-entrypoint make -e PYTHON_MINORS=${PYTHON_MINORS} build-docker-${PYTHON_MINORS} test-docker-${PYTHON_MINORS}"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - "./var/docker/py*/.tox/py*/pytest*"
      - "./var/docker/py*/.tox/py*/coverage*"
      - "./var/docker/py*/.tox/py*/htmlcov"
      - "./var/docker/py*/.tox/py*/prospector*"
      - "./dist/*"
    reports:
      junit:
        - "./var/docker/py*/.tox/py*/pytest-junit.xml"
        - "./var/docker/py*/.tox/py*/prospector.xunit"
      coverage_report:
        coverage_format: "cobertura"
        path: "./var/docker/py*/.tox/py*/coverage.xml"

release:
  stage: "release"
  needs: ["build-test"]
  script:
    - "./bin/docker-entrypoint make -e PYTHON_MINORS=3.11 release"
  artifacts:
    paths:
      - "./NEWS-release.rst"
      - "./dist/*"
