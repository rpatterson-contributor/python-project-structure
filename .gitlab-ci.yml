# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml
default:
  image: docker:latest
  services:
    - docker:dind

# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - ".cache/pip"
    - ".tox"
    - ".tox-*"

# Delegate to the `./Makefile` as much as possible to keep as much portable between CI
# platforms

stages:
  - "build"
  - "test"
  - "release"

build-job:
  stage: "build"
  script:
    - "apk update"
    - "apk add make bash git gettext py3-pip"
    - "make -e build-bump build-docker"

test-job:
  stage: "test"
  script:
    - "make -e test-docker"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    # Upload build artifacts:
    # https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html
    paths:
      - "pytest*"
      - "pytest-junit.xml"
      - "coverage*"
      - "htmlcov"
      - "pylint*"
    reports:
      junit: "pytest-junit.xml"
      coverage_report:
        coverage_format: "cobertura"
        path: "coverage.xml"

release-job:
  stage: "release"
  script:
    - "make -e release"
  artifacts:
    paths:
      - "NEWS-release.rst"
  release:
    tag_name: "$CI_COMMIT_TAG"
    description: './NEWS-release.rst'
    # TODO: GitLab release with assets
    # assets:
    #   links:
    #     - name: "Python `sdist` tarball"
    #       url: TODO
    #       filepath: ".tox/dist/*"


# TODO: Cache Docker build cache and `./.tox*` directories?

# TODO: Push container image to GitLab container registry? I don't currently need this
#       but I can easily imagine the value in it.
