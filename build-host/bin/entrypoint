#!/bin/ash
#
# Shared set up for local testing of CI/CD

set -eu -o pipefail
CHOWN_ARGS="-R"
if [ "${DEBUG:=false}" = "true" ]
then
    # Echo commands for easier debugging
    set -x
    PS4='${0}:${LINENO}+'
    CHOWN_ARGS="${CHOWN_ARGS} -c"
fi


main() {
    # Run as the user from the enironment, adding that user if necessary
    if [ -n "${PUID:-}" ]
    then
        if [ "$(id -u)" != "0" ]
        then
            set +x
            echo "ERROR: Can't create a user when not run as root" 1>&2
            false
        fi
        if ! id ${PUID} 2>&-
        then
            # Add an unprivileged user to cover those use cases and more closely match
            # local development
            addgroup -g "${PGID}" "runner"
            adduser -u "${PUID}" -G "runner" -g "CI Runner,,," -D "runner"
        fi
	user_name=$(getent passwd "${PUID}" | cut -d ":" -f 1)
	if [ -e "/var/run/docker.sock" ]
        then
            # Ensure the user can talk to `# dockerd`:
            docker_gid=$(stat -c "%g" "/var/run/docker.sock")
            if ! getent group ${docker_gid}
            then
                addgroup -g "${docker_gid}" "docker"
                adduser "${user_name}" "docker"
            fi
        fi
	# Make the checkout accessible to the user:
	chown ${CHOWN_ARGS} "${PUID}:${PGID}" "./"
	# Run the rest of the CLI arguments as the unprivileged user:
	exec su-exec "${PUID}:${PGID:-${PUID}}" "${@}"
    fi

    # Run un-altered as the user passed in by docker
    exec "$@"
}


main "$@"
